
worker_processes  1;
load_module /usr/lib/nginx/modules/ndk_http_module.so;
load_module /usr/lib/nginx/modules/ngx_http_lua_module.so;
pcre_jit on;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    lua_load_resty_core off;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        off;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout  65;

    gzip  on;
    gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css;

    map $host $kymadomain {
        ~^[^\.]+\.(.*)$ $1;
        default 'kyma.local';
    }

     server {

    server_name localhost3;
    listen 6080;
    port_in_redirect off;

    location /healthz {
      access_log off;
      stub_status;
    }

  }

    server {
        listen       8080 http2;
        include      /usr/share/nginx-extended/nginx-*.conf;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            limit_except GET {
                deny all;
            }

            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ $uri$args $uri$args/ /index.html;


            set_by_lua_block $cspNonce  {
                local upperCase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                local lowerCase = "abcdefghijklmnopqrstuvwxyz"
                local numbers = "0123456789"
                
                local characterSet = upperCase .. lowerCase .. numbers 
                
                local keyLength = 32
                local output = ""	 
                for i = 1, keyLength do
                    local rand = math.random(#characterSet)
                    output = output .. string.sub(characterSet, rand, rand)
                end

                return output
            }

            add_header 'Cache-Control' 'public, max-age=300';
            add_header X-Frame-Options 'SAMEORIGIN';
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-$cspNonce' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; frame-src: 'self'; connect-src 'self' https://*.$kymadomain wss://*.$kymadomain; font-src 'self' data:; object-src 'none'; img-src * data:; child-src * blob:; worker-src 'self' blob:;";
            add_header X-Content-Type-Options 'nosniff';
            add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains';
            add_header X-XSS-Protection '1; mode=block';


            sub_filter_once off;
            sub_filter_types text/html;
            sub_filter_last_modified on;
            sub_filter 'nonce="DYNAMIC_NONCE"' 'nonce="$cspNonce"';
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
