user  nginx;
worker_processes 1; # setting this to 'auto' will result in creating as many worker processes as the number of CPU threads available

pid  /var/run/nginx.pid;
error_log stderr;

events {
    worker_connections  128;
    use                 epoll;
}

http {
    access_log off;
    error_log /dev/stderr;
    limit_req_zone $binary_remote_addr zone=mylimit:1m rate=10r/s;
  
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    map $status $nonSuccessful {
        ~^2  0;
        default 1;
    }

     server {
        server_name localhost3;
        listen 6969;
        port_in_redirect off;

        location /healthz {
         stub_status;
        }
    }

    server {
        listen 80 http2;
        server_name  localhost;

        root   /var/public;
        index  index.html index.htm;
        

        location / {
            access_log /dev/stdout combined if=$nonSuccessful;
            limit_req zone=mylimit burst=30;

            limit_except GET {
                deny all;
            }
            
            try_files $uri $uri/ /index.html;
            add_header Cache-Control 'public, max-age=300';
            add_header X-Frame-Options 'SAMEORIGIN';
            add_header X-Content-Type-Options 'nosniff';
            add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; connect-src 'self' https://* wss://*; font-src 'self' data:; frame-ancestors https://*; object-src 'none'; media-src 'self'; form-action 'self'; img-src * data:; child-src * blob:; worker-src 'self' blob:;";
            add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains';
            add_header X-XSS-Protection '1; mode=block';
        }
    }
}